const oneterm_en = {
    connect: 'Connect',
    session: 'Session',
    connectedAssets: 'Connected Assets',
    totalAssets: 'Total Assets',
    connectedUsers: 'Connected Users',
    account: 'Account',
    accountAuthorization: 'Account Authorization',
    gateway: 'Gateway',
    protocol: 'Protocol',
    asset: 'Asset',
    switchAccount: 'Switch Account',
    name: 'Name',
    baseInfo: 'Base Info',
    accessRestrictions: 'Access Restrictions',
    comment: 'Comment',
    node: 'Node',
    cmdbType: 'CMDB Type',
    fieldMap: 'Field Map',
    field: 'Field',
    filter: 'Filter',
    command: 'Command',
    host: 'Host',
    port: 'Port',
    accountType: 'Account Type',
    password: 'Password',
    secretkey: 'Secret Key',
    publicKey: 'Public Key',
    phrase: 'Phrase',
    createPublicKey: 'Create Public Key',
    editPublicKey: 'Edit Public Key',
    assetCount: 'Asset Count',
    macAddress: 'Mac Address',
    menu: {
        'oneterm': 'OneTerm',
        'workStation': 'Work Station',
        'assetManagement': 'Asset Management',
        'assets': 'Assets',
        'gateways': 'Gateways',
        'accounts': 'Accounts',
        'security': 'Security',
        'sessionAuditing': 'Session Auditing',
        'onlineSession': 'Online Session',
        'offlineSession': 'Offline Session',
        'logAuditing': 'Log Auditing',
        'loginLog': 'Login Log',
        'operationLog': 'Operation Log',
        'publicKey': 'Public Key',
        'commandRecord': 'Command Record',
    },
    dashboard: {
        currentConnect: 'Current Connect',
        currentSession: 'Current Session',
        assetsInOperation: 'Assets in Operation',
        currentUsers: 'Current Users',
        currentGateways: 'Current Gateways',
        assetActive: 'Active Assets',
        assetType: 'Asset Type',
        loginAccount: 'Login Account',
        userRank: 'User Rank',
        userRankTimes: 'times',
        lastDay: 'Last day',
        lastWeek: 'Last Week',
        lastMonth: 'Last Month',
    },
    workStation: {
        recentSession: 'Recent Session',
        myAsset: 'My Assets',
        personalInfo: 'Personal Info',
        loginTime: 'Login Time',
    },
    sessionTable: {
        target: 'Target',
        clientIp: 'Client IP',
        cmdCount: 'Command Count',
        duration: 'Duration',
        monitor: 'monitor',
        disconnect: 'disconnect',
        replay: 'replay',
        confirmDisconnect: 'Confirm to disconnect?',
        cmd: 'Command',
        level: 'Risk Level',
        execute_at: 'Execute At',
        result: 'Result',
        disconnectSuccess: 'Disconnect successfully',
        hour: 'h',
        minute: 'm',
        second: 's',
        loginMessage: 'No target to login'
    },
    assetList: {
        grantUser: 'Granted User',
        assetTree: 'Asset Tree',
        createFloder: 'Create Floder',
        editFloder: 'Edit Floder',
        deleteFloder: 'Delete Floder',
        ip: 'IP',
        nodeName: 'Node Name',
        connectable: 'Connectable',
        connected: 'Connected',
        error: 'Error',
        cmdbSync: 'CMDB Synchronization',
        floderName: 'Floder Name',
        sync: 'Enable Synchronization',
        frequency: 'Frequency',
        time: 'Time',
        effectiveDate: 'Effective Date',
        commandFilter: 'Command Filter',
        allowAccess: 'Allow Access',
        prohibitAccess: 'Prohibit Access',
        weektime: 'week/time',
        selectedTime: 'Selected Time',
        drag: 'Drag the mouse to select time',
        assetList: 'Asset List',
        createAsset: 'Create Asset',
        editAsset: 'Edit Asset',
        enable: 'Enable',
        addAccount: 'Create Account',
        editProtocol: 'Edit Protocol',
        createGateway: 'Create Gateway',
        editGateway: 'Edit Gateway',
        gatewayName: 'Gateway Name',
        createCount: 'Create Count',
        editCount: 'Edit Count',
        createCommand: 'Create Command',
        editCommand: 'Edit Command',
        basicSettings: 'Basic Settings',
        timeout: 'Timeout',
        gatewayTip: 'The gateway function solves the problem of some environments not being able to connect directly, and connecting will use the gateway as a springboard to connect to the target asset',
        gatewayAccountTip: 'Account used to log in to assets',
        gatewaySecretkeyTip: 'Secret key, such as: \n-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----',
        gatewayPhraseTip: 'Optional, the encryption string used when generating the key(passphrase)',
        publicKeyTip: 'Used for automatic user login authentication, which means logging in on the corresponding machine without entering an account password'
    },
    log: {
        time: 'Time',
        type: 'Resource Type',
        param: 'Param',
        before: 'Before',
        after: 'After',
    }
}
export default oneterm_en
