const cs_en = {
    menu: {
      person: 'My Profile',
      companyInfo: 'Company Info',
      companyStructure: 'Company Structure',
      notice: 'Notification Settings',
      email: 'Email Settings',
      wx: 'WeChat Work',
      dingding: 'DingTalk',
      feishu: 'Feishu',
      auth: 'Auth Settings',
      role: 'Role Management',
      sys: 'System Role',
      technician: 'Technician Role',
      user: 'User Role',
      group: 'User Group',
      duty: 'Duty Management',
  },
  companyInfo: {
    spanCompany: 'Description',
    name: 'Company Name',
    nameValidate: 'Please enter name',
    description: 'Description',
    spanAddress: 'Address',
    country: 'Country/Region',
    city: 'City',
    address: 'Address',
    postcode: 'Postal Code',
    spanContract: 'Contact Information',
    spanLogo: 'Company Logo',
    website: 'Website',
    phone: 'Phone Number',
    phoneValidate: 'Please enter a valid phone number',
    faxCode: 'Fax Number',
    faxCodeValidate: 'Please enter a valid fax number',
    email: 'Email',
    emailValidate: 'Please enter a valid email address',
    messenger: 'Messenger Address',
    domainName: 'Deployment Domain',
    logo: 'Company Logo',
    upload: 'Upload',
    editCompanyLogo: 'Edit Company Logo',
    editCompanyLogoSmall: 'Edit Company Logo Thumbnail',
    imageSizeLimit2MB: 'Image size does not exceed 2MB',
    checkInputCorrect: 'Please check if the input content is correct',
  },
  companyStructure: {
    batchImport: 'Batch Import',
    batchEdit: 'Batch Edit',
    selectFile: 'Select File',
    downloadTemplateName: 'Employee Import Template',
    clickDownloadImportTemplate: 'Click to download Employee Import Template',
    importSuccess: 'Imported total {allCount} items, imported successfully',
    importFailed: 'import failed',
    count: 'items',
    email: 'Email',
    emailPlaceholder: 'Please enter email',
    emailFormatErr: 'Email format error',
    username: 'Username',
    usernamePlaceholder: 'Please enter username',
    nickname: 'Full Name',
    nicknamePlaceholder: 'Please enter full name',
    password: 'Password',
    passwordPlaceholder: 'Please enter password',
    sex: 'Gender',
    sexPlaceholder: 'Please select gender',
    male: 'Male',
    female: 'Female',
    mobile: 'Mobile Number',
    mobilePlaceholder: 'Please enter mobile number',
    mobileFormatErr: 'Please enter a valid mobile number',
    positionName: 'Position',
    positionNamePlaceholder: 'Please enter position',
    employee: 'Employee',
    departmentName: 'Department',
    currentCompany: 'Current Company',
    currentCompanyPlaceholder: 'Please select current company',
    dfcEntryDate: 'Initial Entry Date',
    dfcEntryDatePlaceholder: 'Please select initial entry date',
    entryDate: 'Current Company Entry Date',
    entryDatePlaceholder: 'Please select current company entry date',
    isInternship: 'Full-time/Intern',
    isInternshipPlaceholder: 'Please select full-time/intern',
    internship: 'Intern',
    fullTime: 'Full-time',
    leaveDate: 'Resignation Date',
    leaveDatePlaceholder: 'Please select resignation date',
    idCard: 'ID Card Number',
    idCardPlaceholder: 'Please enter ID card number',
    nation: 'Ethnicity',
    nationPlaceholder: 'Please select ethnicity',
    idPlace: 'Native Place',
    idPlacePlaceholder: 'Please enter native place',
    party: 'Political Affiliation',
    partyPlaceholder: 'Please select political affiliation',
    partyMember: 'Party Member',
    member: 'League Member',
    masses: 'Masses',
    householdRegistrationType: 'Residency Type',
    householdRegistrationTypePlaceholder: 'Please select residency type',
    town: 'Urban',
    agriculture: 'Rural',
    hometown: 'Residence Location',
    hometownPlaceholder: 'Please enter residence location',
    marry: 'Marital Status',
    unmarried: 'Unmarried',
    married: 'Married',
    marryPlaceholder: 'Please select marital status',
    maxDegree: 'Highest Degree',
    maxDegreePlaceholder: 'Please select highest degree',
    phd: 'PhD',
    master: 'Master',
    undergraduate: 'Bachelor',
    specialist: 'Associate',
    highSchool: 'High School',
    technicalSecondaryOrHighSchool: 'Technical/High School',
    juniorHighSchool: 'Junior High School',
    primarySchool: 'Primary School',
    emergencyPerson: 'Emergency Contact',
    emergencyPersonPlaceholder: 'Please enter emergency contact',
    emergencyPhone: 'Emergency Contact Number',
    emergencyPhonePlaceholder: 'Please enter emergency contact number',
    bankCardInfo: 'Bank Card',
    bankCardNumber: 'Bank Card Number',
    bankCardNumberPlaceholder: 'Please enter bank card number',
    bankCardName: 'Bank',
    bankCardNamePlaceholder: 'Please enter bank',
    openingBank: 'Issuing Bank',
    openingBankPlaceholder: 'Please enter issuing bank',
    accountOpeningLocation: 'Account Opening Location',
    accountOpeningLocationPlaceholder: 'Please enter account opening location',
    school: 'Graduated School',
    schoolPlaceholder: 'Please enter graduated school',
    major: 'Major',
    majorPlaceholder: 'Please enter major',
    education: 'Education',
    educationPlaceholder: 'Please select education',
    educationalExperience: 'Education History',
    graduationYear: 'Graduation Year',
    graduationYearPlaceholder: 'Please select graduation year',
    birthDate: 'Date of Birth',
    birthDatePlaceholder: 'Please select date of birth',
    birthPlace: 'Place of Birth',
    birthPlacePlaceholder: 'Please enter place of birth',
    nationalityRegion: 'Nationality/Region',
    nationalityRegionPlaceholder: 'Please select nationality/region',
    firstEntryDate: 'First Entry Date',
    firstEntryDatePlaceholder: 'Please select first entry date',
    estimatedDepartureDate: 'Estimated Departure Date',
    estimatedDepartureDatePlaceholder: 'Please select estimated departure date',
    lastLogin: 'Last Login Time',
    importFailedReason: 'Failure Reason',
    selectDepartment: 'Select Department',
    supervisor: 'Supervisor',
    editDirectSupervisor: 'Edit Supervisor',
    selectDirectSupervisor: 'Select Supervisor',
    annualLeave: 'Annual Leave',
    editPosition: 'Edit Position',
    editAnnualLeave: 'Edit Annual Leave',
    annualLeavePlaceholder: 'Please enter annual leave',
    virtualAnnualLeave: 'Virtual Annual Leave',
    virtualAnnualLeavePlaceholder: 'Please enter virtual annual leave',
    parentingLeave: 'Parenting Leave',
    leftParentingLeave: 'Remaining Parenting Leave',
    parentingLeavePlaceholder: 'Please enter parenting leave',
    day: 'day(s)',
    resetPassword: 'Reset Password',
    confirmPassword: 'Confirm Password',
    block: 'Disable',
    blockUserConfirm: 'This user will be disabled, continue?',
    batchBlockUserConfirm: 'These users will be disabled, continue?',
    recover: 'Recover',
    recoverUserConfirm: 'This user will be recovered, continue?',
    batchRecoverUserConfirm: 'These users will be recovered, continue?',
    opFailed: 'Operation failed',
    opSuccess: 'Operation successful',
    createSubDepartment: 'Create Sub-department',
    editDepartment: 'Edit Department',
    deleteDepartment: 'Delete Department',
    downloadAll: 'Download All',
    downloadSelected: 'Download Selected',
    departmentLabel: 'Department Name',
    departmentLabelPlaceholder: 'Please enter department name',
    parentDepartment: 'Parent Department',
    parentDepartmentPlaceholder: 'Please select parent department',
    departmentDirector: 'Department Director',
    childrenInformation: 'Children Information',
    childrenName: 'Children Name',
    childrenGender: 'Children Gender',
    childrenBirthday: 'Children Birthday',
    allEmployee: 'All Employees',
    activeEmployee: 'Active',
    blockEmployee: 'Disabled',
    prevStep: 'Previous',
    nextStep: 'Next',
    done: 'Done',
    uploadFile: 'Upload File',
    confirmData: 'Confirm Data',
    uploadDone: 'Upload Done',
    dataErr: 'Data Error',
    createEmployee: 'Create Employee',
    editEmployee: 'Edit Employee',
    role: 'Role',
    selectDisplayColumn: 'Please select columns to display'
  },
  auth: {
    basic: 'Basic',
    other: 'Other',
    isEnable: 'Is Enabled',
    common: 'Common',
    testConnect: 'Test Connection',
    testLogin: 'Test Login',
    testSuccess: 'Test Successful',
    ldap: {
      serverAddress: 'Server Address',
      serverAddressHelp: 'E.g. 192.168.1.6 or ldap://192.168.1.6 or ldap://192.168.1.6:389',
      serverAddressPlaceholder: 'Please enter server address',
      domain: 'Domain',
      domainPlaceholder: 'Please enter domain',
      user: 'User',
      username: 'Username',
      userPlaceholder: 'Please enter username',
      userHelp: 'User DN: cn={},ou=users,dc=xxx,dc=com   {} will be replaced by username'
    },
    cas: {
      server: 'Server Address',
      serverHelp: 'Without url path, e.g. https://xxx.com',
      serverPlaceholder: 'Please enter CAS server address',
      validateServer: 'Validation Server Address',
      validateServerHelp: 'Without url path, e.g. https://xxx.com',
      validateServerPlaceholder: 'Please enter validation server address',
      loginRoute: 'Login Route',
      loginRoutePlaceholder: 'Please enter login route',
      logoutRoute: 'Logout Route',
      logoutRoutePlaceholder: 'Please enter logout route',
      validateRoute: 'Validate Route',
      validateRoutePlaceholder: 'Please enter validate route',
      afterLoginRoute: 'Redirect Route',
      afterLoginRoutePlaceholder: 'Please enter redirect route',
      userMap: 'User Attribute Mapping'
    },
    autoRedirectLogin: 'Auto Redirect to Third-party Login Page',
    autoRedirectLoginHelp: 'If disabled, a confirmation will be displayed to redirect to third-party login page. Click the Cancel button will go to the built-in login page',
    usernameOrEmail: 'Username/Email',
    usernameOrEmailPlaceholder: 'Please enter username/email',
    password: 'Password',
    passwordPlaceholder: 'Please enter password',
    oauth2: {
      clientId: 'Client ID',
      clientIdPlaceholder: 'Please enter client ID',
      clientSecret: 'Client Secret',
      clientSecretPlaceholder: 'Please enter client secret',
      authorizeUrl: 'Authorize URL',
      authorizeUrlPlaceholder: 'Please enter authorize URL',
      tokenUrl: 'Token URL',
      tokenUrlPlaceholder: 'Please enter token URL',
      userInfo: 'User Info',
      scopes: 'Scopes',
      scopesPlaceholder: 'Please enter scopes',
    }
  },
  duty: {
    basicSetting: 'Basic Settings',
    ruleName: 'Title',
    ruleNamePlaceholder: 'Please enter title',
    principalId: 'Person in Charge',
    specifyId: 'Appointee',
    principalIdPlaceholder: 'Please select person in charge/single select',
    remark: 'Remark',
    remarkPlaceholder: 'Please enter remark',
    remindTime: 'Duty Remind Time',
    remindWay: 'Remind Way',
    remindPeople: 'Remind People',
    mainDutyPeople: 'Main Duty Person',
    deputyDutyPeople: 'Deputy Duty Person',
    dutyRule: 'Duty Rule',
    '一': 'Mon',
    '二': 'Tue',
    '三': 'Wed',
    '四': 'Thu',
    '五': 'Fri',
    '六': 'Sat',
    '日': 'Sun',
    searchPlaceholder: 'Please search',
    dutyTable: 'Duty Schedule',
    dutyMember: 'Duty Member',
    dutyMemberPlaceholder: 'Please select duty member',
    startDutyMember: 'Start Duty Member',
    startEndDate: 'Start End Date',
    startEndDatePlaceholder: 'Please select start end date',
    dutyPeriod: 'Duty Period',
    dutyFrequency: 'Duty Frequency',
    fullDay: 'Full Day',
    specifyTime: 'Specify Time',
    monthDayFormat: 'MM/DD',
    week: 'Week',
    month: 'Month',
    hour: 'Hour',
    min: 'min',
    before: 'Before',
    fixed: 'Fixed Time',
    removeHolidays: 'Remove Holidays',
    offDutyReceiver: 'Off-duty Receiver',
    offDutyReceiverPlaceholder: 'Please select off-duty receiver',
    titleLimit: 'Please enter title (20 characters)',
    remarkLimit: 'Remark 150 characters max',
    frequencyLimit: 'Please enter duty frequency (positive integer)'
  },
  group: {
    groupName: 'User Group',
    groupNamePlaceholder: 'Please enter user group',
    addGroup: 'Add Group',
    editGroup: 'Edit Group',
  },
  components: {
    preview: 'Preview',
    copy: 'Copy',
    editAvatar: 'Edit Avatar',
    conditionFilter: 'Condition Filter',
    selectPlaceholder: 'Please select',
    empty: 'Empty',
    and: 'And',
    or: 'Or',
    equal: 'Equal',
    notEqual: 'Not Equal',
    isEmpty: 'Is Empty',
    isNotEmpty: 'Is Not Empty',
    compare: 'Compare',
    moreThan: 'More Than',
    lessThan: 'Less Than',
    operatorInPlaceholder: 'Separate by ;',
    selectEmployee: 'Select Employee'
  },
  notice: {
    corpid: 'Corp ID',
    agentid: 'Self-built App ID',
    corpsecret: 'Self-built App Secret',
    itsmAppId: 'ITSM App ID',
    robot: 'Robot',
    selectRobot: 'Please select robot',
    robotConfigErrorTips: 'Please fill out robot configuration completely',
    webhookAddress: 'Webhook Address',
    appKey: 'App Key',
    appSecret: 'App Secret',
    robotCode: 'Robot Code',
    sendServer: 'Outgoing Server',
    connectProtocol: 'Connection Protocol',
    ews: 'EWS(Exchange Web Services)',
    authType: 'Auth Type',
    base: 'Base',
    oauth: 'OAuth',
    ip: 'Server Name/IP Address',
    username: 'Username',
    password: 'Password',
    email: 'Email Address',
    emailType: 'Email Type',
    port: 'Port',
    testEmailConfig: 'Test Email Settings',
    testRecyclingBin: 'Test Recycle Bin',
    receiveEmailFailed: 'Receive email failed',
    emailServiceNotConfig: 'Email server is not configured, please configure one email server',
    troubleshooting: 'Troubleshooting',
    emailConfig: 'Email Settings',
    receiveEmailInterval: 'Get Email Interval',
    startProxyServer: 'Start Proxy Server',
    configProxyServer: 'Config Proxy Server',
    startEmailTest: 'Start Email Test',
    disableCreationOfRequestsViaEmail: 'Disable Creation of Requests Via Email',
    specifyAllowedEmails: 'Specify Allowed Emails/Domains, Separate Multiple Values By Comma',
    specifyAllowedEmailsExample: 'E.g. user@domain.com,*@domain.com',
    specifyAllowedEmailsLimit: 'Limit cannot apply to requests already in sessions, it will aggregate to its parent ticket',
    messageConfig: 'Message Settings',
    moveWrongMessagesToFolder: 'Move Messages to Wrong Folder',
    knowMore: 'Learn More',
    configProxySettings: 'Config Proxy Settings',
    host: 'Host',
    isEncrypted: 'Is Encrypted',
    emailTest: 'Email Test',
    testSendAddress: 'Test Send Email Address',
    testMailSend: 'Test Mail Send',
    portPlaceholder: 'Please enter port',
    testSendAddressPlaceholder: 'Please enter test send email address',
    emailSendSuccess: 'Email Send Success',
    title: 'Title',
  },
  person: {
    spanTitle: 'Personal Info',
    accountAndPassword: 'Account Password',
    avatar: 'Avatar',
    changeAvatar: 'Change Avatar',
    email: 'Email',
    wechatApp: 'WeChat Work',
    feishuApp: 'Feishu',
    dingdingApp: 'DingTalk',
    bindInfo: 'Bind Info',
    newPassword: 'New Password',
    confirmPassword: 'Confirm Password',
    pleaseConfirmNewPasswordSecondTime: 'Please confirm new password again',
    thePasswordEnteredTwiceIsInconsistent: 'The password entered twice is inconsistent',
    inputStrCountLimit20: 'Character count must be less than 20',
    inputStrCountLimit: 'Character count must be less than {limit}',
    alert: 'Warning',
    confirmUnbind: 'Confirm unbind?',
    unbindSuccess: 'Unbind successful',
    bindSuccess: 'Bind successful',
  },
  role: {
    systemRole: 'System Role',
    technicianRole: 'Technician Role',
    userRole: 'User Role',
    authorizedByTheCreator: 'Authorized By The Creator',
    authorizeAccordingToRules: 'Authorize According To Rules',
    expression: 'Expression',
    matchResults: 'Match Results',
    matchResultEmpty: 'Empty',
    pleaseFillInTheCompleteRules: 'Please fill in the complete rules',
    roleName: 'Role Name',
    pleaseEnterRoleName: 'Please enter role name',
    appName: 'App Name',
    pleaseEnterAppName: 'Please enter app name',
    createRole: 'Create Role',
    editRole: 'Edit Role',
    copyRole: 'Copy Role From {roleName}',
    associatedEmployees: 'Associated Employees',
    inputNameOrEmail: 'Enter Name/Email',
    remove: 'Remove',
    confirmRemoveEmployee: 'Confirm remove this employee?',
    removeSuccess: 'Remove successful',
    associatedSuccess: 'Associate successful',
    roleEmployee: 'Role Employee',
    operationPermission: 'Operation Permission',
    dataPermission: 'Data Permission',
    confirmDeleteRole: 'Confirm delete role [{roleName}]?',
    deleteRoleSuccess: 'Delete successful',
    mySelf: 'My self',
    mySubordinates: 'My Subordinates',
    myDepartment: 'My Department',
    myDepartmentAndSubordinateDepartments: 'My Department And Subordinate Departments',
    test: 'Test',
    selectApp: 'Select App',
  }
}

export default cs_en
